"""add association_nom to users

Revision ID: 8b12ff11fdfc
Revises: 35fdc5c1f086
Create Date: 2025-06-03 00:31:52.749395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '8b12ff11fdfc'
down_revision: Union[str, None] = '35fdc5c1f086'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_taches_id'), table_name='taches')
    op.drop_table('taches')
    op.drop_index(op.f('ix_status_id'), table_name='status')
    op.drop_table('status')
    op.add_column('associations', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('associations', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('sinistres', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('sinistres', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('association_nom', sa.String(), nullable=True))
    op.alter_column('users', 'latitude',
               existing_type=mysql.DOUBLE(asdecimal=True),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('users', 'longitude',
               existing_type=mysql.DOUBLE(asdecimal=True),
               type_=sa.Float(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'longitude',
               existing_type=sa.Float(),
               type_=mysql.DOUBLE(asdecimal=True),
               existing_nullable=True)
    op.alter_column('users', 'latitude',
               existing_type=sa.Float(),
               type_=mysql.DOUBLE(asdecimal=True),
               existing_nullable=True)
    op.drop_column('users', 'association_nom')
    op.drop_column('sinistres', 'longitude')
    op.drop_column('sinistres', 'latitude')
    op.drop_column('associations', 'longitude')
    op.drop_column('associations', 'latitude')
    op.create_table('status',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('etat', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('demande_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['demande_id'], ['demandes.id'], name=op.f('status_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_status_id'), 'status', ['id'], unique=False)
    op.create_table('taches',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('status', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('volontaire_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('demande_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['demande_id'], ['demandes.id'], name=op.f('taches_ibfk_2')),
    sa.ForeignKeyConstraint(['volontaire_id'], ['volontaires.id'], name=op.f('taches_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_taches_id'), 'taches', ['id'], unique=False)
    # ### end Alembic commands ###
